\ Tools                                                         \ These are the default tools loaded when DX-Forth is initially \ built.                                                        \ Users may change or add to the tools as needed.               -->                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ( Load block)                                                   forth definitions  decimal  warning off                         cr .( Loading Tools...)  2 #screens 1- thru                     forth definitions  decimal  warning onl/s ( -- n )  b/buf c/l / ;  \ lines/screen                   : esc? ( -- flag )  \ test key - space resumes                    key? dup if  key bl = if drop  key bl <> then  then ;         : .line ( line blk -- )                                           block swap  c/l *  +  c/l -trailing  typeist screen n                                                 : LIST ( n -- )                                                   cr  0  over  scr 2!  3 spaces  u.                               l/s 0 do                                                          cr  i 2 .r space  i  scr @ .line                              loop ;                                                        : L ( -- )  scr @ list ;   \ list current screen                : N ( -- )  1 scr +! l ;   \ list 'next' screen                 : B ( -- )  -1 scr +! l ;  \ list previous screen 'back'                                                                                                                                                                                                                                                                                                                                                                                                        ( WORDS-LIKE WORDS )                                            \ List words in the context vocabulary                          : .words ( a u -- )                                               2>r  cr  0  context @  wordlist>name                            begin  esc? not and  ?dup while                                   dup name>string 2r@ ( caps ) search  -rot 2drop if                dup c@ $40 and $1D - bl max emit limit over count               $1F and + cell+ @ u< [char] | and bl max emit space             dup .id  swap 1+ swap  ( out @ 64 < if  20 out @                over mod - spaces  else  ) cr  50 ms  ( then )                then  n>name                                                  repeat  2r> 2drop  cr . ." words" ;                           : WORDS-LIKE ( "pattern" -- )  parse-name .words ;              : WORDS ( -- )  here 0 .words ;                                 behead .words .words                                                                                                            ( DUMP)                                                         : h.n ( u n -- )                                                  base @ >r  hex  <# 0 tuck do # loop #> type  r> base ! ;      \ Dump u bytes in hex and ascii                                 : DUMP ( offs u -- )                                              cr  3 spaces  16 0 do  over i +  2 spaces  1 h.n  loop          over + swap ?do                                                   cr  50 ms  i 4 h.n space                                        16 0  do  i j + c@  2 h.n space  loop                           16 0  do  i j + c@  dup bl 127 within                             if  emit  else  drop  [char] . emit  then                     loop  esc? if leave then                                      16 +loop ;                                                                                                                                                                                                                                                    ( VOCS ORDER )                                                  \ List all vocabularies                                         : VOCS ( -- )                                                     voc-link begin  @ ?dup while  dup cell- .wid space  repeat ;  : ORDER ( -- )  context 2@                                        cr ."  context: " .wid                                          cr ."  current: " .wid ;                                      : .file ( -- )  file?                                             if    scr ?  current-block-file type                                  ."  ("  #screens 0 u.r  ." )"                             else  ." ---"  then  swap-file ;                              : .stat ( u1 u2 -- )  swap 5 u.r ."  (" 5 u.r ."  free)" ;                                                                                                                                                                                                                                                                      ( INDEX )                                                       \ Display index line of screens n1 thru n2                      : INDEX ( n1 n2 -- )                                              1+ swap do                                                        cr  50 ms                                                       i 3 .r space                                                    0 i .line                                                       esc? if leave then                                            loopisplay 'quick index' starting at screen n                    : QX ( n -- )                                                     page  60 0 do                                                     i 20 /mod  26 *  swap at-xy                                     dup #screens u< if                                                dup 3 .r  space                                                 dup block 2+  21 type                                         then  1+                                                      loop drop  crist screens n1 thru n2 in triads to printer                  : SHOW ( n1 n2 -- )                                               printer                                                         1+  swap 3 /  3 *  do                                             cr ." Page "  i 3 /  1+ .                                       11  out @ -  spaces  current-block-file -path type              i 3 +  i do                                                       cr  i dup #screens u< and  list                               loop  cr page  esc? if leave then  3                          +loop  console ;                                              : LISTING ( -- )  0  #screens 1-  0 max  show ;                                                                                                                                                                                                                                                                                 